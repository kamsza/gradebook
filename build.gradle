/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'                                          // Apply the java plugin to add support for Java
    id 'application'                                   // Apply the application plugin to add support for building an application
}
// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    // Zakomentowałem, bo guava nie jest nam potrzebna
    // compile 'com.google.guava:guava:20.0'

    // Tu są zależności związane z bazą danych
    compile('org.apache.derby:derbyclient:10.14.2.0')
    compile 'org.hibernate:hibernate-core:5.1.16.Final'
    compile 'org.hibernate:hibernate-entitymanager:5.1.16.Final'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    // This is for mocks to work
    testCompile 'com.google.truth:truth:0.33'
    testCompile 'org.mockito:mockito-core:3.2.0'
    testCompile 'org.powermock:powermock-api-mockito2:2.0.4'
    testCompile 'org.powermock:powermock-module-junit4:2.0.4'

    compile('javax.xml.bind:jaxb-api:2.3.0')
    compile('javax.activation:activation:1.1')
    compile('org.glassfish.jaxb:jaxb-runtime:2.3.0')
}

// Define the main class for the application
mainClassName = 'pl.edu.agh.jdziennik.App'

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Javowy dziennik elektroniczny',
                'Implementation-Version': '0.0.1',
                'Main-Class': 'pl.edu.agh.jdziennik.App'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

apply plugin: 'java'

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

sourceSets {
    main {
        output.resourcesDir = "${buildDir}/classes/java/main/resources"
    }
}

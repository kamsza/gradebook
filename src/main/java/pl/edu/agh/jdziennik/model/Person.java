package pl.edu.agh.jdziennik.model;

import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;

/**
 * Represents part common to teacher, student and parent.
 * This class is mapped by hibernate.
 */
@Entity
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
public abstract class Person {

    /**
     * Generated by hibernate.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.TABLE)
    @Column(name = "ID")
    private int id;

    @Column(nullable = false, name = "Name")
    private String name;

    @Column(nullable = false, name = "Surname")
    private String surname;

    /**
     * for hibernate
     */
    Person() {
    }

    /**
     * Creates new Person using values passed. The newly created
     * object does not have id set.
     */
    protected Person(final String name, final String surname) {
        this.name = name;
        this.surname = surname;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public String getSurname() {
        return surname;
    }

    // TODO model classes should not handle properties. Move this
    // to presenter/controller classes
    public final StringProperty nameProperty() {
        return new SimpleStringProperty(name);
    }

    public final StringProperty surnameProperty() {
        return new SimpleStringProperty(surname);
    }

    /**
     * Checks if persons are equal using id, name and surname.
     */
    @Override
    public boolean equals(final Object other) {
        return
                other != null &&
                        other instanceof Person &&
                        ((Person) other).id == id &&
                        ((Person) other).name.equals(name) &&
                        ((Person) other).surname.equals(surname);
    }

    @Override
    public int hashCode() {
        return id ^ name.hashCode() ^ surname.hashCode();
    }
}

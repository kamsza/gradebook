package pl.edu.agh.jdziennik.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

@Entity
public class Attendance {

    /**
     * Generated by hibernate.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.TABLE)
    @Column(name = "ID")
    private int id;
    @ManyToOne
    @JoinColumn(nullable = false, name = "Student_ID")
    private Student student;
    @ManyToOne
    @JoinColumn(nullable = false, name = "Lesson_ID")
    private Lesson lesson;
    @Enumerated(EnumType.ORDINAL)
    @Column(columnDefinition = "smallint", nullable = false,
            name = "Attendance")
    private AttendanceValue attendanceValue;

    /**
     * for hibernate
     */
    Attendance() {
    }

    public Attendance(Lesson lesson, Student student,
                      AttendanceValue attendanceValue) {
        this.lesson = lesson;
        this.student = student;
        this.attendanceValue = attendanceValue;

        student.addAttendance(this);
        lesson.addAttendance(this);
    }

    public int getId() {
        return id;
    }

    public Student getStudent() {
        return student;
    }

    public Lesson getLesson() {
        return lesson;
    }

    public AttendanceValue getAttendanceValue() {
        return attendanceValue;
    }

    public void setAttendanceValue(AttendanceValue attendanceValue) {
        this.attendanceValue = attendanceValue;
    }

    /**
     * Checks if attendances are equal using id, student, lesson and
     * attendance type.
     */
    @Override
    public boolean equals(Object other) {
        return
                other != null &&
                        other instanceof Attendance &&
                        ((Attendance) other).id == id &&
                        ((Attendance) other).student.equals(student) &&
                        ((Attendance) other).lesson.equals(lesson) &&
                        ((Attendance) other).attendanceValue == attendanceValue;
    }

    @Override
    public int hashCode() {
        return id ^ student.hashCode() ^ lesson.hashCode() ^
                attendanceValue.hashCode();
    }

    @Override
    public String toString() {
        return lesson.toString();
    }

    /**
     * Represents one of following: presence of a student on a lesson,
     * lack of presence of a student, being late and
     * justified impresence.
     */
    public enum AttendanceValue {
        OBECNOSC("+"),
        SPOZNIENIE("s"),
        NIEOBECNOSC("-"),
        NIEOBECNOSC_USPRAWIEDLIWIONA("|");

        private final String sign;

        AttendanceValue(String sign) {
            this.sign = sign;
        }

        public String getSign() {
            return this.sign;
        }
    }
}
